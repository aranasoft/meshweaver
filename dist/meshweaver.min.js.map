{"version":3,"sources":["meshweaver.js"],"names":["bind","fn","me","apply","arguments","this","Meshweaver","ValidatedView","self","options","setStateToError","setStateToSuccess","setStateToSaving","clearStatus","setStatusRowClass","ensureValidationSummaryItem","clearInputs","modelFromInputs","inputChanged","persistModel","onValidated","unconfigureValidation","configureValidation","saveExistingOnChange","requireUiBinding","statusRowClass","prototype","bindUIElements","_bindUIElements","_bindUIErrorElements","_","invoke","_behaviors","bindings","uiError","_uiErrorBindings","result","each","selector","key","$","unbindUIElements","_unbindUIElements","_unbindUIErrorElements","$el","name","input","ref","results","Validation","valid","_this","view","attr","$item","ref1","uiBind","requireUIBinding","ui","toggleClass","invalid","error","hasClass","on","push","inputChangedCheck","unbind","isValid","model","errors","$validationSummary","showErrors","first","not","length","changes","changedAttributes","save","response","xhr","responseJSON","success","fireChangeEvent","value","changeEventsOn","any","attributeName","trigger","silent","e","code","target","tagName","toLowerCase","keyCode","which","elMatcher","matchedUi","uiFilter","update","set","isNew","match","currentTarget","is","uiPair","chain","pairs","filter","valueFromInput","validate","proposedModel","el","output","val","moment","utc","format","isNaN","parseFloat","isFinite","Number","NaN","find","document","createElement","addClass","appendTo","text","rowSuccessTemplate","template","rowInfoTemplate","rowErrorTemplate","rowClass","alert","html","data","setTimeout","modelState","call","defaultAttributeLoaders","defaultCallbacks","defaultLabelFormatters","defaultMessages","defaultOptions","defaultPatterns","defaultValidators","flatten","formatFunctions","forceUpdate","labelFormatter","Function","formatLabel","attrName","args","Array","slice","shift","replace","number","obj","into","prefix","hasOwnProperty","isArray","forEach","v","k","constructor","Object","bindModel","collectionAdd","collectionRemove","getOptionsAttrs","getValidatedAttrs","getValidators","mixin","unbindModel","validateAttr","validateModel","attrs","keys","reduce","memo","attributes","isFunction","isString","attrValidationSet","validation","attrValidation","without","validator","msg","computed","ctx","extend","validatedAttrs","invalidAttrs","clone","preValidate","isObject","isEmpty","option","flattened","associatedViews","validationError","_isValid","setOptions","allAttrs","changedAttrs","opt","validateAll","pick","changed","defer","intersection","version","configure","collection","Error","callbacks","removeClass","removeAttr","patterns","digits","email","url","messages","required","acceptance","min","max","range","minLength","maxLength","rangeLength","oneOf","equalTo","notEqualTo","validCollection","inlinePattern","labelFormatters","none","sentenceCase","index","toUpperCase","label","labels","attributeLoaders","inputNames","test","nodeName","type","indexOf","validators","hasValue","isNumber","trim","String","trimLeft","trimRight","toString","isRequired","accept","isBoolean","minValue","maxValue","values","include","join","errorMessage","entry","map","pattern"],"mappings":"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","file":"meshweaver.min.js","sourceRoot":"/source/","sourcesContent":["/**\n * meshweaver v0.3.0\n * @copyright 2013-2016 Arana Software <info@aranasoft.com>. https://github.com/aranasoft/meshweaver\n * @license BSD-3-Clause\n */\n(function() {\n  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  this.Meshweaver || (this.Meshweaver = {});\n\n  this.Meshweaver.ValidatedView = (function() {\n    function ValidatedView(self, options) {\n      this.setStateToError = bind(this.setStateToError, this);\n      this.setStateToSuccess = bind(this.setStateToSuccess, this);\n      this.setStateToSaving = bind(this.setStateToSaving, this);\n      this.clearStatus = bind(this.clearStatus, this);\n      this.setStatusRowClass = bind(this.setStatusRowClass, this);\n      this.ensureValidationSummaryItem = bind(this.ensureValidationSummaryItem, this);\n      this.clearInputs = bind(this.clearInputs, this);\n      this.modelFromInputs = bind(this.modelFromInputs, this);\n      this.inputChanged = bind(this.inputChanged, this);\n      this.persistModel = bind(this.persistModel, this);\n      this.onValidated = bind(this.onValidated, this);\n      this.unconfigureValidation = bind(this.unconfigureValidation, this);\n      this.configureValidation = bind(this.configureValidation, this);\n      this.self = self;\n      options || (options = {});\n      this.saveExistingOnChange = options.saveExistingOnChange != null ? options.saveExistingOnChange : options.saveExistingOnChange = true;\n      this.requireUiBinding = options.requireUiBinding != null ? options.requireUiBinding : options.requireUiBinding = true;\n      this.statusRowClass = '.row-status';\n    }\n\n    ValidatedView.prototype.bindUIElements = function() {\n      this._bindUIElements();\n      this._bindUIErrorElements();\n      _.invoke(this._behaviors, this._bindUIElements);\n      _.invoke(this._behaviors, this._bindUIErrorElements);\n    };\n\n    ValidatedView.prototype._bindUIErrorElements = function() {\n      var bindings;\n      if (!this.uiError) {\n        return;\n      }\n      if (!this._uiErrorBindings) {\n        this._uiErrorBindings = this.uiError;\n      }\n      bindings = _.result(this, '_uiErrorBindings');\n      this.uiError = {};\n      _.each(bindings, (function(selector, key) {\n        this.uiError[key] = this.$(selector);\n      }), this);\n    };\n\n    ValidatedView.prototype.unbindUIElements = function() {\n      this._unbindUIElements();\n      this._unbindUIErrorElements();\n      _.invoke(this._behaviors, this._unbindUIElements);\n      _.invoke(this._behaviors, this._unbindUIErrorElements);\n    };\n\n    ValidatedView.prototype._unbindUIErrorElements = function() {\n      if (!this.uiError || !this._uiErrorBindings) {\n        return;\n      }\n      _.each(this.uiError, (function($el, name) {\n        delete this.uiError[name];\n      }), this);\n      this.uiError = this._uiErrorBindings;\n      delete this._uiErrorBindings;\n    };\n\n    ValidatedView.prototype.configureValidation = function() {\n      var input, key, ref, results;\n      Meshweaver.Validation.bind(this.self, {\n        valid: (function(_this) {\n          return function(view, attr) {\n            var $item, ref, ref1, uiBind;\n            if (_this.requireUIBinding) {\n              return;\n            }\n            uiBind = ((ref = view.uiError) != null ? ref[attr] : void 0) || ((ref1 = view.ui) != null ? ref1[attr] : void 0);\n            if (uiBind == null) {\n              return;\n            }\n            if (uiBind) {\n              uiBind.toggleClass('input-validation-error', false);\n            }\n            $item = _this.ensureValidationSummaryItem(attr);\n            return $item.toggleClass(\"hide\", true);\n          };\n        })(this),\n        invalid: (function(_this) {\n          return function(view, attr, error) {\n            var $item, ref, ref1, uiBind;\n            if (_this.requireUIBinding) {\n              return;\n            }\n            uiBind = ((ref = view.uiError) != null ? ref[attr] : void 0) || ((ref1 = view.ui) != null ? ref1[attr] : void 0);\n            if (uiBind == null) {\n              return;\n            }\n            if (uiBind) {\n              uiBind.toggleClass('input-validation-error', true);\n            }\n            $item = _this.ensureValidationSummaryItem(attr, error);\n            return $item.toggleClass(\"hide\", false);\n          };\n        })(this)\n      });\n      ref = this.self.ui;\n      results = [];\n      for (key in ref) {\n        input = ref[key];\n        if (input.hasClass('input-date')) {\n          input.on('change', this.inputChanged);\n        }\n        if (!input.hasClass('input-date')) {\n          input.on('blur', this.inputChanged);\n        }\n        results.push(input.on('keypress', this.inputChangedCheck));\n      }\n      return results;\n    };\n\n    ValidatedView.prototype.unconfigureValidation = function() {\n      return Meshweaver.Validation.unbind(this.self);\n    };\n\n    ValidatedView.prototype.onValidated = function(isValid, model, errors) {\n      var $validationSummary, showErrors;\n      $validationSummary = this.self.$('.validation-summary').first();\n      showErrors = !isValid && $(\"ul > li\", $validationSummary).not(\".hide\").length > 0;\n      $validationSummary.toggleClass('validation-summary-valid', !showErrors);\n      return $validationSummary.toggleClass('validation-summary-errors', showErrors);\n    };\n\n    ValidatedView.prototype.persistModel = function() {\n      var changes;\n      changes = this.self.model.changedAttributes();\n      if (!changes) {\n        return;\n      }\n      if (!this.self.model.isValid(true)) {\n        return;\n      }\n      this.setStateToSaving();\n      return this.self.model.save(null, {\n        error: (function(_this) {\n          return function(response, xhr, options) {\n            return _this.setStateToError(xhr.responseJSON);\n          };\n        })(this),\n        success: (function(_this) {\n          return function() {\n            var fireChangeEvent, key, results, value;\n            _this.setStateToSuccess();\n            if (!_this.self.changeEventsOn) {\n              return;\n            }\n            results = [];\n            for (key in changes) {\n              value = changes[key];\n              fireChangeEvent = _(_this.self.changeEventsOn).any(function(attributeName) {\n                return attributeName === key;\n              });\n              if (fireChangeEvent) {\n                results.push(_this.self.model.trigger(\"change:\" + key, _this.self.model));\n              } else {\n                results.push(void 0);\n              }\n            }\n            return results;\n          };\n        })(this),\n        silent: true\n      });\n    };\n\n    ValidatedView.prototype.inputChangedCheck = function(e) {\n      var code;\n      if (e.target.tagName.toLowerCase() === 'textarea') {\n        return;\n      }\n      code = e.keyCode ? e.keyCode : e.which;\n      if (code !== 13) {\n        return;\n      }\n      return this.inputChanged(e);\n    };\n\n    ValidatedView.prototype.inputChanged = function(e) {\n      var elMatcher, matchedUi, uiFilter, update;\n      this.self.model.set(this.modelFromInputs(), {\n        silent: true\n      });\n      this.self.trigger('input-change', e);\n      if (!this.self.model.isNew() && this.saveExistingOnChange) {\n        this.persistModel();\n        return;\n      }\n      elMatcher = function(match) {\n        return $(e.currentTarget).is(match);\n      };\n      uiFilter = function(uiPair) {\n        return _.any(uiPair[1], elMatcher);\n      };\n      matchedUi = _.chain(this.self.ui).pairs().filter(uiFilter).first().value();\n      if (!matchedUi) {\n        return;\n      }\n      update = {};\n      update[matchedUi[0]] = this.valueFromInput(matchedUi[1]);\n      return this.self.model.validate(update);\n    };\n\n    ValidatedView.prototype.modelFromInputs = function() {\n      var key, ref, value;\n      this.proposedModel = {};\n      ref = this.self.ui;\n      for (key in ref) {\n        value = ref[key];\n        this.proposedModel[key] = this.valueFromInput(value);\n      }\n      return this.proposedModel;\n    };\n\n    ValidatedView.prototype.valueFromInput = function(input) {\n      var el, output, val;\n      el = input.is(':radio') ? input.filter(':checked') : input;\n      val = el.val();\n      if (val === '') {\n        return void 0;\n      }\n      if (el.hasClass('input-date')) {\n        return moment(val).utc().format(\"YYYY-MM-DD[T]HH:mm:ss[Z]\");\n      }\n      if (el.hasClass('input-numeric') || input.is('input[type=number]')) {\n        if (!isNaN(parseFloat(val)) && isFinite(val)) {\n          output = Number(val);\n        }\n        if (output == null) {\n          output = Number.NaN;\n        }\n        return output;\n      }\n      return val;\n    };\n\n    ValidatedView.prototype.clearInputs = function() {\n      var key, ref, results, value;\n      ref = this.self.ui;\n      results = [];\n      for (key in ref) {\n        value = ref[key];\n        results.push(value.val(\"\"));\n      }\n      return results;\n    };\n\n    ValidatedView.prototype.ensureValidationSummaryItem = function(key, error) {\n      var $item, $validationSummary;\n      $validationSummary = this.self.$('.validation-summary').first();\n      $item = $('ul', $validationSummary).find(\".\" + key);\n      if (!$item.length) {\n        $item = $(document.createElement(\"li\")).addClass(key).addClass(\"hide\").appendTo($('ul', $validationSummary));\n      }\n      $item.text(error ? error : \"\");\n      return $item;\n    };\n\n    ValidatedView.prototype.rowSuccessTemplate = _.template('<div class=\"alert alert-fixed alert-success alert-thin fade in\"><span class=\"icon-stack\"><i class=\"icon-circle-blank icon-stack-base\"></i><i class=\"icon-thumbs-up\"></i></span> <%= data.text %></div>');\n\n    ValidatedView.prototype.rowInfoTemplate = _.template('<div class=\"alert alert-fixed alert-info alert-thin fade in\"><%= data.text %></div>');\n\n    ValidatedView.prototype.rowErrorTemplate = _.template('<div class=\"alert alert-error alert-thin fade in\"><%= data.text %></div>');\n\n    ValidatedView.prototype.setStatusRowClass = function(rowClass) {\n      return this.statusRowClass = rowClass;\n    };\n\n    ValidatedView.prototype.clearStatus = function() {\n      return this.self.$(this.statusRowClass + ' .alert').alert('close');\n    };\n\n    ValidatedView.prototype.setStateToSaving = function() {\n      return this.self.$(this.statusRowClass).html(this.rowInfoTemplate({\n        data: {\n          text: 'Saving'\n        }\n      }));\n    };\n\n    ValidatedView.prototype.setStateToSuccess = function() {\n      this.self.$(this.statusRowClass).html(this.rowSuccessTemplate({\n        data: {\n          text: 'Successfully Saved'\n        }\n      }));\n      return setTimeout(this.clearStatus, 3000);\n    };\n\n    ValidatedView.prototype.setStateToError = function(response) {\n      var $validationSummary, modelState;\n      response || (response = {});\n      modelState = response.modelState || (response.modelState = []);\n      _.each(modelState, (function(_this) {\n        return function(errors, attr) {\n          var $item, el;\n          errors || (errors = []);\n          if (errors[0] == null) {\n            return;\n          }\n          el = _.result(_this.self.ui, attr);\n          if (el == null) {\n            return;\n          }\n          el.toggleClass('input-validation-error', true);\n          $item = _this.ensureValidationSummaryItem(attr, errors[0]);\n          return $item.toggleClass(\"hide\", false);\n        };\n      })(this));\n      $validationSummary = this.self.$('.validation-summary').first();\n      $validationSummary.toggleClass('validation-summary-valid', false);\n      $validationSummary.toggleClass('validation-summary-errors', true);\n      return this;\n    };\n\n    return ValidatedView;\n\n  })();\n\n}).call(this);\n\n(function() {\n  this.Meshweaver || (this.Meshweaver = {});\n\n  this.Meshweaver.Validation = (function(_) {\n\n    /*\n     * Based Largely Upon\n     * ----------------------------------\n     *\n     * Backbone.Validation v0.11.5\n     *\n     * Copyright (c) 2011-2015 Thomas Pedersen\n     * Distributed under MIT License\n     *\n     * Documentation and full license available at:\n     * http://thedersen.com/projects/backbone-validation\n     */\n    var Validation, defaultAttributeLoaders, defaultCallbacks, defaultLabelFormatters, defaultMessages, defaultOptions, defaultPatterns, defaultValidators, flatten, formatFunctions;\n    defaultOptions = {\n      forceUpdate: false,\n      selector: 'name',\n      labelFormatter: 'label',\n      valid: Function.prototype,\n      invalid: Function.prototype\n    };\n    formatFunctions = {\n      formatLabel: function(attrName, model) {\n        return defaultLabelFormatters[defaultOptions.labelFormatter](attrName, model);\n      },\n      format: function() {\n        var args, text;\n        args = Array.prototype.slice.call(arguments);\n        text = args.shift();\n        return text.replace(/\\{(\\d+)\\}/g, function(match, number) {\n          if (typeof args[number] !== 'undefined') {\n            return args[number];\n          } else {\n            return match;\n          }\n        });\n      }\n    };\n    flatten = function(obj, into, prefix) {\n      into = into || {};\n      prefix = prefix || '';\n      _.each(obj, function(val, key) {\n        if (obj.hasOwnProperty(key)) {\n          if (!!val && _.isArray(val)) {\n            _.forEach(val, function(v, k) {\n              flatten(v, into, prefix + key + '.' + k + '.');\n              into[prefix + key + '.' + k] = v;\n            });\n          } else if (!!val && typeof val === 'object' && val.constructor === Object) {\n            flatten(val, into, prefix + key + '.');\n          }\n          into[prefix + key] = val;\n        }\n      });\n      return into;\n    };\n    Validation = (function() {\n      var bindModel, collectionAdd, collectionRemove, getOptionsAttrs, getValidatedAttrs, getValidators, mixin, unbindModel, validateAttr, validateModel;\n      getValidatedAttrs = function(model, attrs) {\n        attrs = attrs || _.keys(_.result(model, 'validation') || {});\n        return _.reduce(attrs, (function(memo, key) {\n          memo[key] = void 0;\n          return memo;\n        }), {});\n      };\n      getOptionsAttrs = function(options, view) {\n        var attrs;\n        attrs = options.attributes;\n        if (_.isFunction(attrs)) {\n          attrs = attrs(view);\n        } else if (_.isString(attrs) && _.isFunction(defaultAttributeLoaders[attrs])) {\n          attrs = defaultAttributeLoaders[attrs](view);\n        }\n        if (_.isArray(attrs)) {\n          return attrs;\n        }\n      };\n      getValidators = function(model, attr) {\n        var attrValidationSet;\n        attrValidationSet = model.validation ? _.result(model, 'validation')[attr] || {} : {};\n        if (_.isFunction(attrValidationSet) || _.isString(attrValidationSet)) {\n          attrValidationSet = {\n            fn: attrValidationSet\n          };\n        }\n        if (!_.isArray(attrValidationSet)) {\n          attrValidationSet = [attrValidationSet];\n        }\n        return _.reduce(attrValidationSet, (function(memo, attrValidation) {\n          _.each(_.without(_.keys(attrValidation), 'msg'), function(validator) {\n            memo.push({\n              fn: defaultValidators[validator],\n              val: attrValidation[validator],\n              msg: attrValidation.msg\n            });\n          });\n          return memo;\n        }), []);\n      };\n      validateAttr = function(model, attr, value, computed) {\n        return _.reduce(getValidators(model, attr), (function(memo, validator) {\n          var ctx, result;\n          ctx = _.extend({}, formatFunctions, defaultValidators);\n          result = validator.fn.call(ctx, value, attr, validator.val, model, computed, validator.msg);\n          if (result === false || memo === false) {\n            return false;\n          }\n          if (result && !memo) {\n            return result;\n          }\n          return memo;\n        }), '');\n      };\n      validateModel = function(model, attrs, validatedAttrs) {\n        var computed, error, invalidAttrs, isValid;\n        error = void 0;\n        invalidAttrs = {};\n        isValid = true;\n        computed = _.clone(attrs);\n        _.each(validatedAttrs, function(val, attr) {\n          error = validateAttr(model, attr, val, computed);\n          if (error) {\n            invalidAttrs[attr] = error;\n            isValid = false;\n          }\n        });\n        return {\n          invalidAttrs: invalidAttrs,\n          isValid: isValid\n        };\n      };\n      mixin = function(view, options) {\n        return {\n          preValidate: function(attr, value) {\n            var error, result, self;\n            self = this;\n            result = {};\n            error = void 0;\n            if (_.isObject(attr)) {\n              _.each(attr, function(value, key) {\n                error = self.preValidate(key, value);\n                if (error) {\n                  result[key] = error;\n                }\n              });\n              if (_.isEmpty(result)) {\n                return void 0;\n              } else {\n                return result;\n              }\n            } else {\n              return validateAttr(this, attr, value, _.extend({}, this.attributes));\n            }\n          },\n          isValid: function(option) {\n            var attrs, error, flattened, invalidAttrs;\n            flattened = void 0;\n            attrs = void 0;\n            error = void 0;\n            invalidAttrs = void 0;\n            option = option || getOptionsAttrs(options, view);\n            if (_.isString(option)) {\n              attrs = [option];\n            } else if (_.isArray(option)) {\n              attrs = option;\n            }\n            if (attrs) {\n              flattened = flatten(this.attributes);\n              _.each(this.associatedViews, (function(view) {\n                _.each(attrs, (function(attr) {\n                  error = validateAttr(this, attr, flattened[attr], _.extend({}, this.attributes));\n                  if (error) {\n                    options.invalid(view, attr, error, options.selector);\n                    invalidAttrs = invalidAttrs || {};\n                    invalidAttrs[attr] = error;\n                  } else {\n                    options.valid(view, attr, options.selector);\n                  }\n                }), this);\n              }), this);\n            }\n            if (option === true) {\n              invalidAttrs = this.validate();\n            }\n            if (invalidAttrs) {\n              this.trigger('invalid', this, invalidAttrs, {\n                validationError: invalidAttrs\n              });\n            }\n            if (attrs) {\n              return !invalidAttrs;\n            } else if (this.validation) {\n              return this._isValid;\n            } else {\n              return true;\n            }\n          },\n          validate: function(attrs, setOptions) {\n            var allAttrs, changedAttrs, flattened, model, opt, result, validateAll, validatedAttrs;\n            model = this;\n            validateAll = !attrs;\n            opt = _.extend({}, options, setOptions);\n            validatedAttrs = getValidatedAttrs(model, getOptionsAttrs(options, view));\n            allAttrs = _.extend({}, validatedAttrs, model.attributes, attrs);\n            flattened = flatten(allAttrs);\n            changedAttrs = attrs ? flatten(attrs) : flattened;\n            result = validateModel(model, allAttrs, _.pick(flattened, _.keys(validatedAttrs)));\n            model._isValid = result.isValid;\n            _.each(model.associatedViews, function(view) {\n              _.each(validatedAttrs, function(val, attr) {\n                var changed, invalid;\n                invalid = result.invalidAttrs.hasOwnProperty(attr);\n                changed = changedAttrs.hasOwnProperty(attr);\n                if (!invalid) {\n                  opt.valid(view, attr, opt.selector);\n                }\n                if (invalid && (changed || validateAll)) {\n                  opt.invalid(view, attr, result.invalidAttrs[attr], opt.selector);\n                }\n              });\n            });\n            _.defer(function() {\n              model.trigger('validated', model._isValid, model, result.invalidAttrs);\n              model.trigger('validated:' + (model._isValid ? 'valid' : 'invalid'), model, result.invalidAttrs);\n            });\n            if (opt.forceUpdate) {\n              return;\n            }\n            if (!(_.intersection(_.keys(result.invalidAttrs), _.keys(changedAttrs)).length > 0)) {\n              return;\n            }\n            return result.invalidAttrs;\n          }\n        };\n      };\n      bindModel = function(view, model, options) {\n        if (model.associatedViews) {\n          model.associatedViews.push(view);\n        } else {\n          model.associatedViews = [view];\n        }\n        _.extend(model, mixin(view, options));\n      };\n      unbindModel = function(model, view) {\n        if (view && model.associatedViews && model.associatedViews.length > 1) {\n          model.associatedViews = _.without(model.associatedViews, view);\n        } else {\n          delete model.validate;\n          delete model.preValidate;\n          delete model.isValid;\n          delete model.associatedViews;\n        }\n      };\n      collectionAdd = function(model) {\n        bindModel(this.view, model, this.options);\n      };\n      collectionRemove = function(model) {\n        unbindModel(model);\n      };\n      return {\n        version: '0.3.0',\n        configure: function(options) {\n          _.extend(defaultOptions, options);\n        },\n        bind: function(view, options) {\n          var collection, model;\n          options = _.extend({}, defaultOptions, defaultCallbacks, options);\n          model = options.model || view.model;\n          collection = options.collection || view.collection;\n          if (typeof model === 'undefined' && typeof collection === 'undefined') {\n            throw new Error('Before you execute the binding your view must have ' + 'a model or a collection.\\nSee ' + 'http://thedersen.com/projects/backbone-validation/#using-form-model-validation ' + 'for more information.');\n          }\n          if (model) {\n            bindModel(view, model, options);\n          } else if (collection) {\n            collection.each(function(model) {\n              bindModel(view, model, options);\n            });\n            collection.bind('add', collectionAdd, {\n              view: view,\n              options: options\n            });\n            collection.bind('remove', collectionRemove);\n          }\n        },\n        unbind: function(view, options) {\n          var collection, model;\n          options = _.extend({}, options);\n          model = options.model || view.model;\n          collection = options.collection || view.collection;\n          if (model) {\n            unbindModel(model, view);\n          } else if (collection) {\n            collection.each(function(model) {\n              unbindModel(model, view);\n            });\n            collection.unbind('add', collectionAdd);\n            collection.unbind('remove', collectionRemove);\n          }\n        },\n        mixin: mixin(null, defaultOptions)\n      };\n    })();\n    defaultCallbacks = Validation.callbacks = {\n      valid: function(view, attr, selector) {\n        view.$('[' + selector + '~=\"' + attr + '\"]').removeClass('invalid').removeAttr('data-error');\n      },\n      invalid: function(view, attr, error, selector) {\n        view.$('[' + selector + '~=\"' + attr + '\"]').addClass('invalid').attr('data-error', error);\n      }\n    };\n    defaultPatterns = Validation.patterns = {\n      digits: /^\\d+$/,\n      number: /^-?(?:\\d+|\\d{1,3}(?:,\\d{3})+)(?:\\.\\d+)?$/,\n      email: /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i,\n      url: /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i\n    };\n    defaultMessages = Validation.messages = {\n      required: '{0} is required',\n      acceptance: '{0} must be accepted',\n      min: '{0} must be greater than or equal to {1}',\n      max: '{0} must be less than or equal to {1}',\n      range: '{0} must be between {1} and {2}',\n      length: '{0} must be {1} characters',\n      minLength: '{0} must be at least {1} characters',\n      maxLength: '{0} must be at most {1} characters',\n      rangeLength: '{0} must be between {1} and {2} characters',\n      oneOf: '{0} must be one of: {1}',\n      equalTo: '{0} must be the same as {1}',\n      notEqualTo: '{0} must not be the same as {1}',\n      validCollection: '{0} contains invalid entries: {1}',\n      digits: '{0} must only contain digits',\n      number: '{0} must be a number',\n      email: '{0} must be a valid email',\n      url: '{0} must be a valid url',\n      inlinePattern: '{0} is invalid'\n    };\n    defaultLabelFormatters = Validation.labelFormatters = {\n      none: function(attrName) {\n        return attrName;\n      },\n      sentenceCase: function(attrName) {\n        return attrName.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(match, index) {\n          if (index === 0) {\n            return match.toUpperCase();\n          } else {\n            return ' ' + match.toLowerCase();\n          }\n        }).replace(/_/g, ' ');\n      },\n      label: function(attrName, model) {\n        var labels, sentenceCase;\n        labels = _.isFunction(model.labels) ? model.labels.call(model) : model.labels;\n        sentenceCase = Meshweaver.Validation.labelFormatters.sentenceCase;\n        return _.result(labels, attrName) || sentenceCase(attrName, model);\n      }\n    };\n    defaultAttributeLoaders = Validation.attributeLoaders = {\n      inputNames: function(view) {\n        var attrs;\n        if (!view) {\n          [];\n        }\n        attrs = [];\n        view.$('form [name]').each(function() {\n          if (!/^(?:input|select|textarea)$/i.test(this.nodeName)) {\n            return;\n          }\n          if (!(this.name && this.type !== 'submit' && attrs.indexOf(this.name) === -1)) {\n            return;\n          }\n          attrs.push(this.name);\n        });\n        return attrs;\n      }\n    };\n    defaultValidators = Validation.validators = (function() {\n      var hasValue, isNumber, trim;\n      trim = String.prototype.trim ? (function(text) {\n        if (text === null) {\n          return '';\n        } else {\n          return String.prototype.trim.call(text);\n        }\n      }) : (function(text) {\n        var trimLeft, trimRight;\n        trimLeft = /^\\s+/;\n        trimRight = /\\s+$/;\n        if (text === null) {\n          return '';\n        } else {\n          return text.toString().replace(trimLeft, '').replace(trimRight, '');\n        }\n      });\n      isNumber = function(value) {\n        return _.isNumber(value) || (_.isString(value) && value.match(defaultPatterns.number));\n      };\n      hasValue = function(value) {\n        if (value == null) {\n          return false;\n        }\n        if (_.isString(value) && !!!value) {\n          return false;\n        }\n        if (_.isArray(value) && _.isEmpty(value)) {\n          return false;\n        }\n        return true;\n      };\n      return {\n        fn: function(value, attr, fn, model, computed, msg) {\n          if (_.isString(fn)) {\n            fn = model[fn];\n          }\n          return fn.call(model, value, attr, computed, msg);\n        },\n        required: function(value, attr, required, model, computed, msg) {\n          var isRequired;\n          isRequired = _.isFunction(required) ? required.call(model, value, attr, computed) : required;\n          if (!isRequired && !hasValue(value)) {\n            return false;\n          }\n          if (!isRequired || hasValue(value)) {\n            return;\n          }\n          return this.format(msg || defaultMessages.required, this.formatLabel(attr, model));\n        },\n        acceptance: function(value, attr, accept, model, computed, msg) {\n          if (value === 'true' || (_.isBoolean(value) && value === true)) {\n            return;\n          }\n          return this.format(msg || defaultMessages.acceptance, this.formatLabel(attr, model));\n        },\n        min: function(value, attr, minValue, model, computed, msg) {\n          minValue = _.isFunction(minValue) ? minValue.call(model, value, attr, computed) : minValue;\n          if (isNumber(value) && value >= minValue) {\n            return;\n          }\n          return this.format(msg || defaultMessages.min, this.formatLabel(attr, model), minValue);\n        },\n        max: function(value, attr, maxValue, model, computed, msg) {\n          maxValue = _.isFunction(maxValue) ? maxValue.call(model, value, attr, computed) : maxValue;\n          if (isNumber(value) && value <= maxValue) {\n            return;\n          }\n          return this.format(msg || defaultMessages.max, this.formatLabel(attr, model), maxValue);\n        },\n        range: function(value, attr, range, model, computed, msg) {\n          range = _.isFunction(range) ? range.call(model, value, attr, computed) : range;\n          if (isNumber(value) && value >= range[0] || value <= range[1]) {\n            return;\n          }\n          return this.format(msg || defaultMessages.range, this.formatLabel(attr, model), range[0], range[1]);\n        },\n        length: function(value, attr, length, model, computed, msg) {\n          length = _.isFunction(length) ? length.call(model, value, attr, computed) : length;\n          if (_.isString(value) && value.length === length) {\n            return;\n          }\n          return this.format(msg || defaultMessages.length, this.formatLabel(attr, model), length);\n        },\n        minLength: function(value, attr, minLength, model, computed, msg) {\n          minLength = _.isFunction(minLength) ? minLength.call(model, value, attr, computed) : minLength;\n          if (_.isString(value) && value.length >= minLength) {\n            return;\n          }\n          return this.format(msg || defaultMessages.minLength, this.formatLabel(attr, model), minLength);\n        },\n        maxLength: function(value, attr, maxLength, model, computed, msg) {\n          maxLength = _.isFunction(maxLength) ? maxLength.call(model, value, attr, computed) : maxLength;\n          if (_.isString(value) && value.length <= maxLength) {\n            return;\n          }\n          return this.format(msg || defaultMessages.maxLength, this.formatLabel(attr, model), maxLength);\n        },\n        rangeLength: function(value, attr, range, model, computed, msg) {\n          range = _.isFunction(range) ? range.call(model, value, attr, computed) : range;\n          if (_.isString(value) && value.length >= range[0] && value.length <= range[1]) {\n            return;\n          }\n          return this.format(msg || defaultMessages.rangeLength, this.formatLabel(attr, model), range[0], range[1]);\n        },\n        oneOf: function(value, attr, values, model, computed, msg) {\n          if (_.include(values, value)) {\n            return;\n          }\n          return this.format(msg || defaultMessages.oneOf, this.formatLabel(attr, model), values.join(', '));\n        },\n        equalTo: function(value, attr, equalTo, model, computed, msg) {\n          if (value === computed[equalTo]) {\n            return;\n          }\n          msg || (msg = defaultMessages.equalTo);\n          return this.format(msg, this.formatLabel(attr, model), this.formatLabel(equalTo, model));\n        },\n        notEqualTo: function(value, attr, notEqualTo, model, computed, msg) {\n          if (value !== computed[notEqualTo]) {\n            return;\n          }\n          msg || (msg = defaultMessages.notEqualTo);\n          return this.format(msg, this.formatLabel(attr, model), this.formatLabel(notEqualTo, model));\n        },\n        validCollection: function(value, attr, valid, model, computed, msg) {\n          var errorMessage, errors, isValid;\n          isValid = _.isFunction(valid) ? valid.call(model, value, attr, computed) : valid;\n          if (!isValid) {\n            return;\n          }\n          errors = value.filter(function(entry) {\n            return !entry.isNew();\n          }).map(function(entry) {\n            return entry.validate();\n          });\n          if (_.find(errors, function(error) {\n            return !!error;\n          }) == null) {\n            return;\n          }\n          errorMessage = _.chain(errors.filter(function(error) {\n            return !!error;\n          })).map(function(error) {\n            return _.values(error);\n          }).flatten().value().join('; ');\n          return this.format(msg || defaultMessages.validCollection, this.formatLabel(attr, model), errorMessage);\n        },\n        pattern: function(value, attr, pattern, model, computed, msg) {\n          pattern = _.isFunction(pattern) ? pattern.call(model, value, attr, computed) : pattern;\n          if (hasValue(value) && value.toString().match(defaultPatterns[pattern] || pattern)) {\n            return;\n          }\n          msg || (msg = defaultMessages[pattern] || defaultMessages.inlinePattern);\n          return this.format(msg, this.formatLabel(attr, model), pattern);\n        }\n      };\n    })();\n    _.each(defaultValidators, function(validator, key) {\n      defaultValidators[key] = _.bind(defaultValidators[key], _.extend({}, formatFunctions, defaultValidators));\n    });\n    return Validation;\n  })(_);\n\n}).call(this);\n"]}