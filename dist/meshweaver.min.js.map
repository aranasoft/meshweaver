{"version":3,"sources":["meshweaver.js"],"names":["defaultOptions","bind","fn","me","apply","arguments","this","Meshweaver","saveExistingOnChange","ValidatedView","self","options","setStateToError","setStateToSuccess","setStateToSaving","clearStatus","setStatusRowClass","ensureValidationSummaryItem","clearInputs","modelFromInputs","inputChanged","persistModel","onValidated","unconfigureValidation","configureValidation","_","extend","statusRowClass","prototype","bindUIElements","_bindUIElements","_bindUIErrorElements","invoke","_behaviors","bindings","uiError","_uiErrorBindings","result","each","selector","key","$","unbindUIElements","_unbindUIElements","_unbindUIErrorElements","$el","name","input","ref","results","Validation","valid","_this","view","attr","$item","ref1","uiBind","ui","toggleClass","invalid","error","hasClass","on","push","inputChangedCheck","unbind","isValid","model","errors","$validationSummary","showErrors","first","not","length","changes","changedAttributes","save","response","xhr","responseJSON","success","fireChangeEvent","value","changeEventsOn","any","attributeName","trigger","silent","e","code","target","tagName","toLowerCase","keyCode","which","elMatcher","matchedUi","uiFilter","update","set","isNew","match","currentTarget","is","uiPair","chain","pairs","filter","valueFromInput","validate","proposedModel","el","output","val","moment","utc","format","isNaN","parseFloat","isFinite","Number","NaN","find","document","createElement","addClass","appendTo","text","rowSuccessTemplate","template","rowInfoTemplate","rowErrorTemplate","rowClass","alert","html","data","setTimeout","modelState","call","defaultAttributeLoaders","defaultCallbacks","defaultLabelFormatters","defaultMessages","defaultPatterns","defaultValidators","flatten","formatFunctions","forceUpdate","labelFormatter","Function","formatLabel","attrName","args","Array","slice","shift","replace","number","obj","into","prefix","hasOwnProperty","isArray","forEach","v","k","constructor","Object","bindModel","collectionAdd","collectionRemove","getOptionsAttrs","getValidatedAttrs","getValidators","mixin","unbindModel","validateAttr","validateModel","attrs","keys","reduce","memo","attributes","isFunction","isString","attrValidationSet","validation","attrValidation","without","validator","msg","computed","ctx","validatedAttrs","invalidAttrs","clone","preValidate","isObject","isEmpty","option","flattened","associatedViews","validationError","_isValid","setOptions","allAttrs","changedAttrs","opt","validateAll","pick","changed","defer","intersection","version","configure","collection","Error","callbacks","removeClass","removeAttr","patterns","digits","email","url","messages","required","acceptance","min","max","range","minLength","maxLength","rangeLength","oneOf","equalTo","notEqualTo","validCollection","inlinePattern","labelFormatters","none","sentenceCase","index","toUpperCase","label","labels","attributeLoaders","inputNames","test","nodeName","type","indexOf","validators","hasValue","isNumber","trim","String","trimLeft","trimRight","toString","isRequired","accept","isBoolean","minValue","maxValue","values","include","join","errorMessage","entry","map","pattern"],"mappings":"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","file":"meshweaver.min.js","sourceRoot":"/source/","sourcesContent":["/**\n * meshweaver v0.3.2\n * @copyright 2013-2016 Arana Software <info@aranasoft.com>. https://github.com/aranasoft/meshweaver\n * @license BSD-3-Clause\n */\n(function() {\n  var defaultOptions,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  this.Meshweaver || (this.Meshweaver = {});\n\n  defaultOptions = {\n    saveExistingOnChange: true\n  };\n\n  this.Meshweaver.ValidatedView = (function() {\n    function ValidatedView(self, options) {\n      this.setStateToError = bind(this.setStateToError, this);\n      this.setStateToSuccess = bind(this.setStateToSuccess, this);\n      this.setStateToSaving = bind(this.setStateToSaving, this);\n      this.clearStatus = bind(this.clearStatus, this);\n      this.setStatusRowClass = bind(this.setStatusRowClass, this);\n      this.ensureValidationSummaryItem = bind(this.ensureValidationSummaryItem, this);\n      this.clearInputs = bind(this.clearInputs, this);\n      this.modelFromInputs = bind(this.modelFromInputs, this);\n      this.inputChanged = bind(this.inputChanged, this);\n      this.persistModel = bind(this.persistModel, this);\n      this.onValidated = bind(this.onValidated, this);\n      this.unconfigureValidation = bind(this.unconfigureValidation, this);\n      this.configureValidation = bind(this.configureValidation, this);\n      this.self = self;\n      this.options = _.extend({}, defaultOptions, options);\n      this.statusRowClass = '.row-status';\n    }\n\n    ValidatedView.prototype.bindUIElements = function() {\n      this._bindUIElements();\n      this._bindUIErrorElements();\n      _.invoke(this._behaviors, this._bindUIElements);\n      _.invoke(this._behaviors, this._bindUIErrorElements);\n    };\n\n    ValidatedView.prototype._bindUIErrorElements = function() {\n      var bindings;\n      if (!this.uiError) {\n        return;\n      }\n      if (!this._uiErrorBindings) {\n        this._uiErrorBindings = this.uiError;\n      }\n      bindings = _.result(this, '_uiErrorBindings');\n      this.uiError = {};\n      _.each(bindings, (function(selector, key) {\n        this.uiError[key] = this.$(selector);\n      }), this);\n    };\n\n    ValidatedView.prototype.unbindUIElements = function() {\n      this._unbindUIElements();\n      this._unbindUIErrorElements();\n      _.invoke(this._behaviors, this._unbindUIElements);\n      _.invoke(this._behaviors, this._unbindUIErrorElements);\n    };\n\n    ValidatedView.prototype._unbindUIErrorElements = function() {\n      if (!this.uiError || !this._uiErrorBindings) {\n        return;\n      }\n      _.each(this.uiError, (function($el, name) {\n        delete this.uiError[name];\n      }), this);\n      this.uiError = this._uiErrorBindings;\n      delete this._uiErrorBindings;\n    };\n\n    ValidatedView.prototype.configureValidation = function() {\n      var input, key, ref, results;\n      Meshweaver.Validation.bind(this.self, {\n        valid: (function(_this) {\n          return function(view, attr) {\n            var $item, ref, ref1, uiBind;\n            uiBind = ((ref = view.uiError) != null ? ref[attr] : void 0) || ((ref1 = view.ui) != null ? ref1[attr] : void 0);\n            if (uiBind == null) {\n              return;\n            }\n            if (uiBind) {\n              uiBind.toggleClass('input-validation-error', false);\n            }\n            $item = _this.ensureValidationSummaryItem(attr);\n            return $item.toggleClass(\"hide\", true);\n          };\n        })(this),\n        invalid: (function(_this) {\n          return function(view, attr, error) {\n            var $item, ref, ref1, uiBind;\n            uiBind = ((ref = view.uiError) != null ? ref[attr] : void 0) || ((ref1 = view.ui) != null ? ref1[attr] : void 0);\n            if (uiBind == null) {\n              return;\n            }\n            if (uiBind) {\n              uiBind.toggleClass('input-validation-error', true);\n            }\n            $item = _this.ensureValidationSummaryItem(attr, error);\n            return $item.toggleClass(\"hide\", false);\n          };\n        })(this)\n      });\n      ref = this.self.ui;\n      results = [];\n      for (key in ref) {\n        input = ref[key];\n        if (input.hasClass('input-date')) {\n          input.on('change', this.inputChanged);\n        }\n        if (!input.hasClass('input-date')) {\n          input.on('blur', this.inputChanged);\n        }\n        results.push(input.on('keypress', this.inputChangedCheck));\n      }\n      return results;\n    };\n\n    ValidatedView.prototype.unconfigureValidation = function() {\n      return Meshweaver.Validation.unbind(this.self);\n    };\n\n    ValidatedView.prototype.onValidated = function(isValid, model, errors) {\n      var $validationSummary, showErrors;\n      $validationSummary = this.self.$('.validation-summary').first();\n      showErrors = !isValid && $(\"ul > li\", $validationSummary).not(\".hide\").length > 0;\n      $validationSummary.toggleClass('validation-summary-valid', !showErrors);\n      return $validationSummary.toggleClass('validation-summary-errors', showErrors);\n    };\n\n    ValidatedView.prototype.persistModel = function() {\n      var changes;\n      changes = this.self.model.changedAttributes();\n      if (!changes) {\n        return;\n      }\n      if (!this.self.model.isValid(true)) {\n        return;\n      }\n      this.setStateToSaving();\n      return this.self.model.save(null, {\n        error: (function(_this) {\n          return function(response, xhr, options) {\n            return _this.setStateToError(xhr.responseJSON);\n          };\n        })(this),\n        success: (function(_this) {\n          return function() {\n            var fireChangeEvent, key, results, value;\n            _this.setStateToSuccess();\n            if (!_this.self.changeEventsOn) {\n              return;\n            }\n            results = [];\n            for (key in changes) {\n              value = changes[key];\n              fireChangeEvent = _(_this.self.changeEventsOn).any(function(attributeName) {\n                return attributeName === key;\n              });\n              if (fireChangeEvent) {\n                results.push(_this.self.model.trigger(\"change:\" + key, _this.self.model));\n              } else {\n                results.push(void 0);\n              }\n            }\n            return results;\n          };\n        })(this),\n        silent: true\n      });\n    };\n\n    ValidatedView.prototype.inputChangedCheck = function(e) {\n      var code;\n      if (e.target.tagName.toLowerCase() === 'textarea') {\n        return;\n      }\n      code = e.keyCode ? e.keyCode : e.which;\n      if (code !== 13) {\n        return;\n      }\n      return this.inputChanged(e);\n    };\n\n    ValidatedView.prototype.inputChanged = function(e) {\n      var elMatcher, matchedUi, uiFilter, update;\n      this.self.model.set(this.modelFromInputs());\n      this.self.trigger('input-change', e);\n      if (!this.self.model.isNew() && this.options.saveExistingOnChange) {\n        this.persistModel();\n        return;\n      }\n      elMatcher = function(match) {\n        return $(e.currentTarget).is(match);\n      };\n      uiFilter = function(uiPair) {\n        return _.any(uiPair[1], elMatcher);\n      };\n      matchedUi = _.chain(this.self.ui).pairs().filter(uiFilter).first().value();\n      if (!matchedUi) {\n        return;\n      }\n      update = {};\n      update[matchedUi[0]] = this.valueFromInput(matchedUi[1]);\n      return this.self.model.validate(update);\n    };\n\n    ValidatedView.prototype.modelFromInputs = function() {\n      var key, ref, value;\n      this.proposedModel = {};\n      ref = this.self.ui;\n      for (key in ref) {\n        value = ref[key];\n        this.proposedModel[key] = this.valueFromInput(value);\n      }\n      return this.proposedModel;\n    };\n\n    ValidatedView.prototype.valueFromInput = function(input) {\n      var el, output, val;\n      el = input.is(':radio') ? input.filter(':checked') : input;\n      val = el.val();\n      if (val === '') {\n        return void 0;\n      }\n      if (el.hasClass('input-date')) {\n        return moment(val).utc().format(\"YYYY-MM-DD[T]HH:mm:ss[Z]\");\n      }\n      if (el.hasClass('input-numeric') || input.is('input[type=number]')) {\n        if (!isNaN(parseFloat(val)) && isFinite(val)) {\n          output = Number(val);\n        }\n        if (output == null) {\n          output = Number.NaN;\n        }\n        return output;\n      }\n      return val;\n    };\n\n    ValidatedView.prototype.clearInputs = function() {\n      var key, ref, results, value;\n      ref = this.self.ui;\n      results = [];\n      for (key in ref) {\n        value = ref[key];\n        results.push(value.val(\"\"));\n      }\n      return results;\n    };\n\n    ValidatedView.prototype.ensureValidationSummaryItem = function(key, error) {\n      var $item, $validationSummary;\n      $validationSummary = this.self.$('.validation-summary').first();\n      $item = $('ul', $validationSummary).find(\".\" + key);\n      if (!$item.length) {\n        $item = $(document.createElement(\"li\")).addClass(key).addClass(\"hide\").appendTo($('ul', $validationSummary));\n      }\n      $item.text(error ? error : \"\");\n      return $item;\n    };\n\n    ValidatedView.prototype.rowSuccessTemplate = _.template('<div class=\"alert alert-fixed alert-success alert-thin fade in\"><span class=\"icon-stack\"><i class=\"icon-circle-blank icon-stack-base\"></i><i class=\"icon-thumbs-up\"></i></span> <%= data.text %></div>');\n\n    ValidatedView.prototype.rowInfoTemplate = _.template('<div class=\"alert alert-fixed alert-info alert-thin fade in\"><%= data.text %></div>');\n\n    ValidatedView.prototype.rowErrorTemplate = _.template('<div class=\"alert alert-error alert-thin fade in\"><%= data.text %></div>');\n\n    ValidatedView.prototype.setStatusRowClass = function(rowClass) {\n      return this.statusRowClass = rowClass;\n    };\n\n    ValidatedView.prototype.clearStatus = function() {\n      return this.self.$(this.statusRowClass + ' .alert').alert('close');\n    };\n\n    ValidatedView.prototype.setStateToSaving = function() {\n      return this.self.$(this.statusRowClass).html(this.rowInfoTemplate({\n        data: {\n          text: 'Saving'\n        }\n      }));\n    };\n\n    ValidatedView.prototype.setStateToSuccess = function() {\n      this.self.$(this.statusRowClass).html(this.rowSuccessTemplate({\n        data: {\n          text: 'Successfully Saved'\n        }\n      }));\n      return setTimeout(this.clearStatus, 3000);\n    };\n\n    ValidatedView.prototype.setStateToError = function(response) {\n      var $validationSummary, modelState;\n      response || (response = {});\n      modelState = response.modelState || (response.modelState = []);\n      _.each(modelState, (function(_this) {\n        return function(errors, attr) {\n          var $item, el;\n          errors || (errors = []);\n          if (errors[0] == null) {\n            return;\n          }\n          el = _.result(_this.self.ui, attr);\n          if (el == null) {\n            return;\n          }\n          el.toggleClass('input-validation-error', true);\n          $item = _this.ensureValidationSummaryItem(attr, errors[0]);\n          return $item.toggleClass(\"hide\", false);\n        };\n      })(this));\n      $validationSummary = this.self.$('.validation-summary').first();\n      $validationSummary.toggleClass('validation-summary-valid', false);\n      $validationSummary.toggleClass('validation-summary-errors', true);\n      return this;\n    };\n\n    return ValidatedView;\n\n  })();\n\n}).call(this);\n\n(function() {\n  this.Meshweaver || (this.Meshweaver = {});\n\n  this.Meshweaver.Validation = (function(_) {\n\n    /*\n     * Based Largely Upon\n     * ----------------------------------\n     *\n     * Backbone.Validation v0.11.5\n     *\n     * Copyright (c) 2011-2015 Thomas Pedersen\n     * Distributed under MIT License\n     *\n     * Documentation and full license available at:\n     * http://thedersen.com/projects/backbone-validation\n     */\n    var Validation, defaultAttributeLoaders, defaultCallbacks, defaultLabelFormatters, defaultMessages, defaultOptions, defaultPatterns, defaultValidators, flatten, formatFunctions;\n    defaultOptions = {\n      forceUpdate: false,\n      selector: 'name',\n      labelFormatter: 'label',\n      valid: Function.prototype,\n      invalid: Function.prototype\n    };\n    formatFunctions = {\n      formatLabel: function(attrName, model) {\n        return defaultLabelFormatters[defaultOptions.labelFormatter](attrName, model);\n      },\n      format: function() {\n        var args, text;\n        args = Array.prototype.slice.call(arguments);\n        text = args.shift();\n        return text.replace(/\\{(\\d+)\\}/g, function(match, number) {\n          if (typeof args[number] !== 'undefined') {\n            return args[number];\n          } else {\n            return match;\n          }\n        });\n      }\n    };\n    flatten = function(obj, into, prefix) {\n      into = into || {};\n      prefix = prefix || '';\n      _.each(obj, function(val, key) {\n        if (obj.hasOwnProperty(key)) {\n          if (!!val && _.isArray(val)) {\n            _.forEach(val, function(v, k) {\n              flatten(v, into, prefix + key + '.' + k + '.');\n              into[prefix + key + '.' + k] = v;\n            });\n          } else if (!!val && typeof val === 'object' && val.constructor === Object) {\n            flatten(val, into, prefix + key + '.');\n          }\n          into[prefix + key] = val;\n        }\n      });\n      return into;\n    };\n    Validation = (function() {\n      var bindModel, collectionAdd, collectionRemove, getOptionsAttrs, getValidatedAttrs, getValidators, mixin, unbindModel, validateAttr, validateModel;\n      getValidatedAttrs = function(model, attrs) {\n        attrs = attrs || _.keys(_.result(model, 'validation') || {});\n        return _.reduce(attrs, (function(memo, key) {\n          memo[key] = void 0;\n          return memo;\n        }), {});\n      };\n      getOptionsAttrs = function(options, view) {\n        var attrs;\n        attrs = options.attributes;\n        if (_.isFunction(attrs)) {\n          attrs = attrs(view);\n        } else if (_.isString(attrs) && _.isFunction(defaultAttributeLoaders[attrs])) {\n          attrs = defaultAttributeLoaders[attrs](view);\n        }\n        if (_.isArray(attrs)) {\n          return attrs;\n        }\n      };\n      getValidators = function(model, attr) {\n        var attrValidationSet;\n        attrValidationSet = model.validation ? _.result(model, 'validation')[attr] || {} : {};\n        if (_.isFunction(attrValidationSet) || _.isString(attrValidationSet)) {\n          attrValidationSet = {\n            fn: attrValidationSet\n          };\n        }\n        if (!_.isArray(attrValidationSet)) {\n          attrValidationSet = [attrValidationSet];\n        }\n        return _.reduce(attrValidationSet, (function(memo, attrValidation) {\n          _.each(_.without(_.keys(attrValidation), 'msg'), function(validator) {\n            memo.push({\n              fn: defaultValidators[validator],\n              val: attrValidation[validator],\n              msg: attrValidation.msg\n            });\n          });\n          return memo;\n        }), []);\n      };\n      validateAttr = function(model, attr, value, computed) {\n        return _.reduce(getValidators(model, attr), (function(memo, validator) {\n          var ctx, result;\n          ctx = _.extend({}, formatFunctions, defaultValidators);\n          result = validator.fn.call(ctx, value, attr, validator.val, model, computed, validator.msg);\n          if (result === false || memo === false) {\n            return false;\n          }\n          if (result && !memo) {\n            return result;\n          }\n          return memo;\n        }), '');\n      };\n      validateModel = function(model, attrs, validatedAttrs) {\n        var computed, error, invalidAttrs, isValid;\n        error = void 0;\n        invalidAttrs = {};\n        isValid = true;\n        computed = _.clone(attrs);\n        _.each(validatedAttrs, function(val, attr) {\n          error = validateAttr(model, attr, val, computed);\n          if (error) {\n            invalidAttrs[attr] = error;\n            isValid = false;\n          }\n        });\n        return {\n          invalidAttrs: invalidAttrs,\n          isValid: isValid\n        };\n      };\n      mixin = function(view, options) {\n        return {\n          preValidate: function(attr, value) {\n            var error, result, self;\n            self = this;\n            result = {};\n            error = void 0;\n            if (_.isObject(attr)) {\n              _.each(attr, function(value, key) {\n                error = self.preValidate(key, value);\n                if (error) {\n                  result[key] = error;\n                }\n              });\n              if (_.isEmpty(result)) {\n                return void 0;\n              } else {\n                return result;\n              }\n            } else {\n              return validateAttr(this, attr, value, _.extend({}, this.attributes));\n            }\n          },\n          isValid: function(option) {\n            var attrs, error, flattened, invalidAttrs;\n            flattened = void 0;\n            attrs = void 0;\n            error = void 0;\n            invalidAttrs = void 0;\n            option = option || getOptionsAttrs(options, view);\n            if (_.isString(option)) {\n              attrs = [option];\n            } else if (_.isArray(option)) {\n              attrs = option;\n            }\n            if (attrs) {\n              flattened = flatten(this.attributes);\n              _.each(this.associatedViews, (function(view) {\n                _.each(attrs, (function(attr) {\n                  error = validateAttr(this, attr, flattened[attr], _.extend({}, this.attributes));\n                  if (error) {\n                    options.invalid(view, attr, error, options.selector);\n                    invalidAttrs = invalidAttrs || {};\n                    invalidAttrs[attr] = error;\n                  } else {\n                    options.valid(view, attr, options.selector);\n                  }\n                }), this);\n              }), this);\n            }\n            if (option === true) {\n              invalidAttrs = this.validate();\n            }\n            if (invalidAttrs) {\n              this.trigger('invalid', this, invalidAttrs, {\n                validationError: invalidAttrs\n              });\n            }\n            if (attrs) {\n              return !invalidAttrs;\n            } else if (this.validation) {\n              return this._isValid;\n            } else {\n              return true;\n            }\n          },\n          validate: function(attrs, setOptions) {\n            var allAttrs, changedAttrs, flattened, model, opt, result, validateAll, validatedAttrs;\n            model = this;\n            validateAll = !attrs;\n            opt = _.extend({}, options, setOptions);\n            validatedAttrs = getValidatedAttrs(model, getOptionsAttrs(options, view));\n            allAttrs = _.extend({}, validatedAttrs, model.attributes, attrs);\n            flattened = flatten(allAttrs);\n            changedAttrs = attrs ? flatten(attrs) : flattened;\n            result = validateModel(model, allAttrs, _.pick(flattened, _.keys(validatedAttrs)));\n            model._isValid = result.isValid;\n            _.each(model.associatedViews, function(view) {\n              _.each(validatedAttrs, function(val, attr) {\n                var changed, invalid;\n                invalid = result.invalidAttrs.hasOwnProperty(attr);\n                changed = changedAttrs.hasOwnProperty(attr);\n                if (!invalid) {\n                  opt.valid(view, attr, opt.selector);\n                }\n                if (invalid && (changed || validateAll)) {\n                  opt.invalid(view, attr, result.invalidAttrs[attr], opt.selector);\n                }\n              });\n            });\n            _.defer(function() {\n              model.trigger('validated', model._isValid, model, result.invalidAttrs);\n              model.trigger('validated:' + (model._isValid ? 'valid' : 'invalid'), model, result.invalidAttrs);\n            });\n            if (opt.forceUpdate) {\n              return;\n            }\n            if (!(_.intersection(_.keys(result.invalidAttrs), _.keys(changedAttrs)).length > 0)) {\n              return;\n            }\n            return result.invalidAttrs;\n          }\n        };\n      };\n      bindModel = function(view, model, options) {\n        if (model.associatedViews) {\n          model.associatedViews.push(view);\n        } else {\n          model.associatedViews = [view];\n        }\n        _.extend(model, mixin(view, options));\n      };\n      unbindModel = function(model, view) {\n        if (view && model.associatedViews && model.associatedViews.length > 1) {\n          model.associatedViews = _.without(model.associatedViews, view);\n        } else {\n          delete model.validate;\n          delete model.preValidate;\n          delete model.isValid;\n          delete model.associatedViews;\n        }\n      };\n      collectionAdd = function(model) {\n        bindModel(this.view, model, this.options);\n      };\n      collectionRemove = function(model) {\n        unbindModel(model);\n      };\n      return {\n        version: '0.3.0',\n        configure: function(options) {\n          _.extend(defaultOptions, options);\n        },\n        bind: function(view, options) {\n          var collection, model;\n          options = _.extend({}, defaultOptions, defaultCallbacks, options);\n          model = options.model || view.model;\n          collection = options.collection || view.collection;\n          if (typeof model === 'undefined' && typeof collection === 'undefined') {\n            throw new Error('Before you execute the binding your view must have ' + 'a model or a collection.\\nSee ' + 'http://thedersen.com/projects/backbone-validation/#using-form-model-validation ' + 'for more information.');\n          }\n          if (model) {\n            bindModel(view, model, options);\n          } else if (collection) {\n            collection.each(function(model) {\n              bindModel(view, model, options);\n            });\n            collection.bind('add', collectionAdd, {\n              view: view,\n              options: options\n            });\n            collection.bind('remove', collectionRemove);\n          }\n        },\n        unbind: function(view, options) {\n          var collection, model;\n          options = _.extend({}, options);\n          model = options.model || view.model;\n          collection = options.collection || view.collection;\n          if (model) {\n            unbindModel(model, view);\n          } else if (collection) {\n            collection.each(function(model) {\n              unbindModel(model, view);\n            });\n            collection.unbind('add', collectionAdd);\n            collection.unbind('remove', collectionRemove);\n          }\n        },\n        mixin: mixin(null, defaultOptions)\n      };\n    })();\n    defaultCallbacks = Validation.callbacks = {\n      valid: function(view, attr, selector) {\n        view.$('[' + selector + '~=\"' + attr + '\"]').removeClass('invalid').removeAttr('data-error');\n      },\n      invalid: function(view, attr, error, selector) {\n        view.$('[' + selector + '~=\"' + attr + '\"]').addClass('invalid').attr('data-error', error);\n      }\n    };\n    defaultPatterns = Validation.patterns = {\n      digits: /^\\d+$/,\n      number: /^-?(?:\\d+|\\d{1,3}(?:,\\d{3})+)(?:\\.\\d+)?$/,\n      email: /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i,\n      url: /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i\n    };\n    defaultMessages = Validation.messages = {\n      required: '{0} is required',\n      acceptance: '{0} must be accepted',\n      min: '{0} must be greater than or equal to {1}',\n      max: '{0} must be less than or equal to {1}',\n      range: '{0} must be between {1} and {2}',\n      length: '{0} must be {1} characters',\n      minLength: '{0} must be at least {1} characters',\n      maxLength: '{0} must be at most {1} characters',\n      rangeLength: '{0} must be between {1} and {2} characters',\n      oneOf: '{0} must be one of: {1}',\n      equalTo: '{0} must be the same as {1}',\n      notEqualTo: '{0} must not be the same as {1}',\n      validCollection: '{0} contains invalid entries: {1}',\n      digits: '{0} must only contain digits',\n      number: '{0} must be a number',\n      email: '{0} must be a valid email',\n      url: '{0} must be a valid url',\n      inlinePattern: '{0} is invalid'\n    };\n    defaultLabelFormatters = Validation.labelFormatters = {\n      none: function(attrName) {\n        return attrName;\n      },\n      sentenceCase: function(attrName) {\n        return attrName.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(match, index) {\n          if (index === 0) {\n            return match.toUpperCase();\n          } else {\n            return ' ' + match.toLowerCase();\n          }\n        }).replace(/_/g, ' ');\n      },\n      label: function(attrName, model) {\n        var labels, sentenceCase;\n        labels = _.isFunction(model.labels) ? model.labels.call(model) : model.labels;\n        sentenceCase = Meshweaver.Validation.labelFormatters.sentenceCase;\n        return _.result(labels, attrName) || sentenceCase(attrName, model);\n      }\n    };\n    defaultAttributeLoaders = Validation.attributeLoaders = {\n      inputNames: function(view) {\n        var attrs;\n        if (!view) {\n          [];\n        }\n        attrs = [];\n        view.$('form [name]').each(function() {\n          if (!/^(?:input|select|textarea)$/i.test(this.nodeName)) {\n            return;\n          }\n          if (!(this.name && this.type !== 'submit' && attrs.indexOf(this.name) === -1)) {\n            return;\n          }\n          attrs.push(this.name);\n        });\n        return attrs;\n      }\n    };\n    defaultValidators = Validation.validators = (function() {\n      var hasValue, isNumber, trim;\n      trim = String.prototype.trim ? (function(text) {\n        if (text === null) {\n          return '';\n        } else {\n          return String.prototype.trim.call(text);\n        }\n      }) : (function(text) {\n        var trimLeft, trimRight;\n        trimLeft = /^\\s+/;\n        trimRight = /\\s+$/;\n        if (text === null) {\n          return '';\n        } else {\n          return text.toString().replace(trimLeft, '').replace(trimRight, '');\n        }\n      });\n      isNumber = function(value) {\n        return _.isNumber(value) || (_.isString(value) && value.match(defaultPatterns.number));\n      };\n      hasValue = function(value) {\n        if (value == null) {\n          return false;\n        }\n        if (_.isString(value) && !!!value) {\n          return false;\n        }\n        if (_.isArray(value) && _.isEmpty(value)) {\n          return false;\n        }\n        return true;\n      };\n      return {\n        fn: function(value, attr, fn, model, computed, msg) {\n          if (_.isString(fn)) {\n            fn = model[fn];\n          }\n          return fn.call(model, value, attr, computed, msg);\n        },\n        required: function(value, attr, required, model, computed, msg) {\n          var isRequired;\n          isRequired = _.isFunction(required) ? required.call(model, value, attr, computed) : required;\n          if (!isRequired && !hasValue(value)) {\n            return false;\n          }\n          if (!isRequired || hasValue(value)) {\n            return;\n          }\n          return this.format(msg || defaultMessages.required, this.formatLabel(attr, model));\n        },\n        acceptance: function(value, attr, accept, model, computed, msg) {\n          if (value === 'true' || (_.isBoolean(value) && value === true)) {\n            return;\n          }\n          return this.format(msg || defaultMessages.acceptance, this.formatLabel(attr, model));\n        },\n        min: function(value, attr, minValue, model, computed, msg) {\n          minValue = _.isFunction(minValue) ? minValue.call(model, value, attr, computed) : minValue;\n          if (isNumber(value) && value >= minValue) {\n            return;\n          }\n          return this.format(msg || defaultMessages.min, this.formatLabel(attr, model), minValue);\n        },\n        max: function(value, attr, maxValue, model, computed, msg) {\n          maxValue = _.isFunction(maxValue) ? maxValue.call(model, value, attr, computed) : maxValue;\n          if (isNumber(value) && value <= maxValue) {\n            return;\n          }\n          return this.format(msg || defaultMessages.max, this.formatLabel(attr, model), maxValue);\n        },\n        range: function(value, attr, range, model, computed, msg) {\n          range = _.isFunction(range) ? range.call(model, value, attr, computed) : range;\n          if (isNumber(value) && value >= range[0] || value <= range[1]) {\n            return;\n          }\n          return this.format(msg || defaultMessages.range, this.formatLabel(attr, model), range[0], range[1]);\n        },\n        length: function(value, attr, length, model, computed, msg) {\n          length = _.isFunction(length) ? length.call(model, value, attr, computed) : length;\n          if (_.isString(value) && value.length === length) {\n            return;\n          }\n          return this.format(msg || defaultMessages.length, this.formatLabel(attr, model), length);\n        },\n        minLength: function(value, attr, minLength, model, computed, msg) {\n          minLength = _.isFunction(minLength) ? minLength.call(model, value, attr, computed) : minLength;\n          if (_.isString(value) && value.length >= minLength) {\n            return;\n          }\n          return this.format(msg || defaultMessages.minLength, this.formatLabel(attr, model), minLength);\n        },\n        maxLength: function(value, attr, maxLength, model, computed, msg) {\n          maxLength = _.isFunction(maxLength) ? maxLength.call(model, value, attr, computed) : maxLength;\n          if (_.isString(value) && value.length <= maxLength) {\n            return;\n          }\n          return this.format(msg || defaultMessages.maxLength, this.formatLabel(attr, model), maxLength);\n        },\n        rangeLength: function(value, attr, range, model, computed, msg) {\n          range = _.isFunction(range) ? range.call(model, value, attr, computed) : range;\n          if (_.isString(value) && value.length >= range[0] && value.length <= range[1]) {\n            return;\n          }\n          return this.format(msg || defaultMessages.rangeLength, this.formatLabel(attr, model), range[0], range[1]);\n        },\n        oneOf: function(value, attr, values, model, computed, msg) {\n          if (_.include(values, value)) {\n            return;\n          }\n          return this.format(msg || defaultMessages.oneOf, this.formatLabel(attr, model), values.join(', '));\n        },\n        equalTo: function(value, attr, equalTo, model, computed, msg) {\n          if (value === computed[equalTo]) {\n            return;\n          }\n          msg || (msg = defaultMessages.equalTo);\n          return this.format(msg, this.formatLabel(attr, model), this.formatLabel(equalTo, model));\n        },\n        notEqualTo: function(value, attr, notEqualTo, model, computed, msg) {\n          if (value !== computed[notEqualTo]) {\n            return;\n          }\n          msg || (msg = defaultMessages.notEqualTo);\n          return this.format(msg, this.formatLabel(attr, model), this.formatLabel(notEqualTo, model));\n        },\n        validCollection: function(value, attr, valid, model, computed, msg) {\n          var errorMessage, errors, isValid;\n          isValid = _.isFunction(valid) ? valid.call(model, value, attr, computed) : valid;\n          if (!isValid) {\n            return;\n          }\n          errors = _.chain(value.filter(function(entry) {\n            return !entry.isNew();\n          })).map(function(entry) {\n            return entry.validate();\n          }).value();\n          if (_.find(errors, function(error) {\n            return !!error;\n          }) == null) {\n            return;\n          }\n          errorMessage = _.chain(errors).filter(function(error) {\n            return !!error;\n          }).map(function(error) {\n            return _.values(error);\n          }).flatten().value().join('; ');\n          return this.format(msg || defaultMessages.validCollection, this.formatLabel(attr, model), errorMessage);\n        },\n        pattern: function(value, attr, pattern, model, computed, msg) {\n          pattern = _.isFunction(pattern) ? pattern.call(model, value, attr, computed) : pattern;\n          if (hasValue(value) && value.toString().match(defaultPatterns[pattern] || pattern)) {\n            return;\n          }\n          msg || (msg = defaultMessages[pattern] || defaultMessages.inlinePattern);\n          return this.format(msg, this.formatLabel(attr, model), pattern);\n        }\n      };\n    })();\n    _.each(defaultValidators, function(validator, key) {\n      defaultValidators[key] = _.bind(defaultValidators[key], _.extend({}, formatFunctions, defaultValidators));\n    });\n    return Validation;\n  })(_);\n\n}).call(this);\n"]}